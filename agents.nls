extensions [ cf ]
breed [ citizens citizen ]
breed [ farmers farmer]

citizens-own [target targetType]; citizen parameters

farmers-own [target targetType]; farmers parameters


to setup-agents
  initialize-citizens initial-amount-of-citizens
  initialize-farmers initial-amount-of-farmers
end

to update-agents
  ;if count patches with [ ptype = "forestBorder"] = 0 [ stop ]
  ask citizens [
    ; if target patch has changed 
    if (not([ptype] of target = targetType)) [set-new-target]
    ;; if citizen on his target
    if distance target = 0 [perform-action get-new-action]
    move-towards-target
  ]
  
  ask farmers [
    ; if target patch has changed 
    if (not([ptype] of target = targetType)) [set-new-target]
    ;; if farmer on his target
    if distance target = 0 [perform-action get-new-action]
    move-towards-target
  ]
end

;; CITIZEN RELATED
;; ===================

to add-citizen
  initialize-citizens 1
end

to add-farmer
  initialize-farmers 1
end

to initialize-citizens [amount]
  create-citizens amount [
    set shape "person"
    set size 3
    set target a-city-patch
    set targetType "city"
    let current a-city-patch
    setxy ([pxcor] of current) ([pycor] of current)
    face target
  ]
  ;;show count turtles
end

to initialize-farmers [amount]
  create-farmers amount [
    set shape "person"
    set color 45;;yellow
    set size 3
    set target a-city-patch
    set targetType "city"
    let current a-city-patch
    setxy ([pxcor] of current) ([pycor] of current)
    face target
    
  ]
  
end

to remove-citizen
  ask one-of citizens [die]
end

to remove-farmer
  ask one-of farmers [die]
end

;; ACTION RELATED
;; ==================
to chop-forest
  set ptype "young forest"
  after-change-patch
  ;ask neighbors with [ ptype = "forest"] [set ptype "forestBorder" color-patch]
end

to planting-crops
  set ptype "crops"
  after-change-patch
end

to move-towards-target
    face target
    ifelse distance target <= movement-speed
      [ move-to target ]
      [ fd movement-speed ]
end

to perform-action
  let pt get-ptype
  (cf:ifelse
    pt = "old forest" [chop-forest]
    pt = "wasteland" [planting-crops]
    []
  )
end

to get-new-action
  if breed = farmers[
    set targetType ifelse-value (get-ptype = "city")
    ["wasteland"]
    ["city"]
    set-new-target
  ]
  if breed = citizens[
    set targetType ifelse-value (get-ptype = "city")
    ["old forest"]
    ["city"]
     set-new-target
  ]
  
end

to set-new-target
  let tt targetType
  set target closest-patch (patches with [ptype = tt])
 
end

;; PATCH RELATED
;; ===================
to-report get-ptype 
  report [ptype] of patch-here
end

to-report closest-patch [patchset]
  let ph patch-here
  report first sort-on [distance ph] patchset
end

to-report a-city-patch
  report one-of patches with [ptype = "city"]
end

to-report a-wasteland-patch
  report one-of patches with [ptype = "wasteland"]
end