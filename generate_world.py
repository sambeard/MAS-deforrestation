import numpy as np
import cv2 as cv
import sys
import random
from matplotlib import pyplot as plt


#------R G B------
#old 51 
#young 53
#wastleand 36
#farmland 67
#river blue

patches = np.array([[85, 89, 66, 51], #old 0
           [34, 177, 76, 53], #young 1
           [0, 162, 232, 96], #river 2
           [239, 228, 176, 36], #wasteland 3
           [0, 0, 0, 5], #city 4
           [255, 242, 0, 67]], np.int64) #farmland 5

patch_name = ["old forest", 
            "young forest",
            "river",
            "wasteland",
            "city",
            "farmland"]

def calculate_min_distance(color):
    min_l2 = 100000
    for i in range(0, 6):
        # print(patches[i][0])
        l2_r = np.square(color[2] - patches[i][0])
        l2_g = np.square(color[1] - patches[i][1])
        l2_b = np.square(color[0] - patches[i][2])

        l2 = np.sqrt(sum((l2_r, l2_b, l2_g)))
        if l2 <= min_l2:
            min_l2  = l2
            patch_type = i
    return patch_type

def main(img_name, width, height):
    im = cv.resize(cv.imread("worlds/{0}.bmp".format(img_name)),(width,height))
    w, h ,_= im.shape

    Z = im.reshape((-1,3))
    Z = np.float32(Z)

    K = 10
    criteria =  (cv.TERM_CRITERIA_EPS + cv.TERM_CRITERIA_MAX_ITER, 10, 1.0)
    ret, label, center  = cv.kmeans(Z, K, None, criteria, 10, cv.KMEANS_RANDOM_CENTERS)

    center = np.uint8(center)
    res = center[label.flatten()]
    res2 = res.reshape((im.shape))

    original_stdout = sys.stdout # Save a reference to the original standard output

    cp_label = np.array(label)
    cp_label = cp_label.reshape(-1)
    patch_names = []
    new_labels = np.zeros((w,h), np.int16) 

    print("Generating World...")
    print("=========================")
    print("Settings: (Bitmap, width, height)")
    print("          ('{0}', {1}, {2})".format(img_name, width, height))

    for i in range(0, w):
        for j in range(0, h):
            new_labels[i][j] = cp_label[i + (h-1)*j]
            color = np.int64(res2[i][j])
            patch_type = calculate_min_distance(color)
            new_labels[i][j] = patch_type
    filename = 'patches.csv'

    with open(filename, 'w') as f:
        sys.stdout = f # Change the standard output to the file we created.
        print(""""export-world data (NetLogo 6.2.0)"
"deforestation_model.nlogo"
"10/14/2021 12:37:35:943 +0200"

"RANDOM STATE"
"0 0 -1727483681 271 0.0 false 2013989304 -1871691995 -915960409 -1798869200 1166807813 -5942477 -1518791675 435545335 -314652213 520260077 1936817868 -192358540 -1206026974 -1898772645 214778085 -922981679 1462699249 759367653 285617470 748997112 -519404324 1890593803 -330621234 1707900761 1084096855 1973104727 1701639977 -2114823553 -2061065985 -1479540976 -1856121665 328856081 1757145167 -429798512 -2031164226 1138859872 1770592181 1569571623 385306014 -1249926344 1309658498 -1966765856 1959292266 -932851215 -727763534 1849120692 -452475881 -1901110470 -526894006 726049036 -1418718201 -1771618636 409367543 -187270375 1414606164 -256035954 268583771 -74227742 1823398965 1673136560 1515565173 -355511774 254494322 -1860899510 -1160443501 2068234713 -1737344949 668375055 1274292273 1171696383 -1271355849 188782801 -1241482785 -331847234 -1744899722 -631267029 -1890701356 -2091291506 313002855 -2024245887 -1244659010 729046094 1470592928 -1190694949 2106494669 1184733757 426895680 -2082467945 -882892300 -1785174207 -1877652585 920180184 1249940998 1380514628 -1801442485 411030540 78972404 -590550721 -1357923180 -542369780 1833808687 -1601279218 124115979 -1448151414 -91882948 957232827 -50404623 -195225476 -610060646 1099037915 2136809270 1421897992 1200865061 1008396362 1910156430 580840792 -778553062 175871213 -2022572974 -1246746631 -591624400 -1318003731 -1724681323 -1160767876 -865964429 1575048818 2104265824 1079939744 -974936895 1077752981 1551581563 476876592 1584339470 1923546836 -1603644050 -2125035401 447922679 1270829570 -1211034511 426060441 119546684 217457216 -20209539 -32105801 -682388836 -1745196225 -1374717670 -1321456438 2037148075 890737226 21421299 1061787766 1847949682 615368336 -740211766 868241034 -1142645346 2031768205 -451268291 530337694 -367717501 -91654825 337728223 944700415 -1391027684 -1424749705 944641331 106872440 99729903 -1350480701 1904756541 2023055868 -238157674 -726838928 922014789 1128695232 -794630673 -304225063 -2098764088 -1740667519 1745819207 -1627386677 -1021637505 -279269361 2134551681 642512711 -1513643983 -1485430979 1525641796 -1964726864 -1733613263 1201611923 187459062 1280024466 -1639658591 683198468 -1542193055 884966585 411417418 687372311 2070057449 -1716965793 889879385 350355564 1918224583 150601125 -844830476 214221770 -53543548 -152180259 -877831088 1989877176 952230961 -187265142 267993127 -1951604581 -1046967713 2102305967 426183883 -399269507 -1541225627 1829730800 1575458947 -1380665092 -1097733832 -1825997977 1591010283 1667998664 696402203 1623510035 -1252261905 -966019193 -1848328504 -1107998191 -1553892156 1961549826 -1214305782 281037446 1227044628 -1716788509 -721980971 -1290762971 1768681196 -1792366669 -1143983584 -1479000889 -440309217 -1615458244 51091122 1356283 276561331 -304302328 -201211482 2005452435 21664741 1216795379 1315734167 830121360 -1426000197 -1040790047 1141833937 -501604020 -168485719 -726445671 -139469594 665239066 -543144556 787687951 114194160 -1614817636 1763282428 -1117544856 81686130 -589110347 355365825 -623032198 -173743631 -503238703 -1486453619 -751058396 -1232729409 -309813149 -107684108 434426289 926096689 -1320619952 2114129125 2115760558 1498638339 1738059796 1302363498 -1646920869 -513138312 -1184181792 -788719733 135179773 1813232203 -1449392273 -1320300196 1713655316 -152065192 -2004028056 756308768 1592826259 -1782167097 1737052638 -936773256 -1120440928 -1921124673 302860450 40661286 -1581331313 -495711308 471832073 -676766950 953129365 352077 -1012639666 -1089917146 801387325 -201739702 253235053 637048306 -136944865 -2028479450 -699692382 355549906 1983693873 -1281337758 616693352 -1792143617 -1025163326 1009065749 1802235662 1580166004 1994412517 1414118269 -521450714 -1629433312 -936981959 1406989745 117134856 -1378383107 -1922025354 438863972 795914526 -1033795782 317150887 -1769508038 -1641316338 1548924292 2049990185 -1515855748 -1950510512 1118453825 -1989747857 -2107352244 -522517849 -617328256 -79425293 -50859748 -579243085 1681382669 -1743997886 1360357014 1967737025 -1357365995 983998279 -176500446 1725838665 -1095023319 -1836672960 -480301252 -1665145617 339637098 313965062 -851343709 1957395301 1192551703 -827744509 -413970753 417635272 -1059091045 -1349964894 -1453735556 1726800924 349857626 -1070206375 1935231000 974157940 529514336 1230947150 -560796352 -2127763692 614771003 -1001951005 261101223 443004167 1229137959 -1094808306 1236010345 -1601957934 838619313 -710887022 866878534 -1879709457 -565308530 -957442855 -1710255697 -1757593977 -1902941541 -1710652830 -826480729 -1894464191 1808965892 -1565257472 466355613 -1768948192 152229914 -1024667549 -1790303667 -650560930 -1514000970 -289573175 2035567401 -522756522 -2138462042 1280239279 -2094102285 1469380877 1563286043 644681631 -321978223 1031973143 587250017 534890612 750288877 596315849 -1564031087 -1678313726 21431739 929755938 -2081668068 1065656306 20264419 2017172937 -1523304189 2006044992 1759277762 -1227745452 1598613634 1744779816 -988844530 -1275026734 -1483337072 1522490778 -1469221014 1879641657 258323634 -1011055048 1478483186 -1119063005 -757862079 441290406 1817583019 722686495 -181645420 1709989557 516838900 -166175878 -1128453854 -1314328001 -587305122 -1559024462 1540625422 499878954 -761455537 1557742573 1223250481 1484932022 1394354568 -1237324476 1333626044 -1100184123 1026127326 1625323950 -1029893746 -631130094 -1032662977 1116287715 -491899345 -1006969221 162778239 1079643110 1374955397 -876164663 694947561 1226129104 1288441990 -1990757966 340172087 -197554885 1630103143 -54350121 2116445213 138498545 -1416811481 -585249082 -380778614 808019142 145843116 -1302554287 -2128737795 2080610625 599588313 -16566520 -510859993 -1718032793 -747450068 1951543254 715192310 -2004719131 -306170091 48166142 837311844 -2130377264 -484393469 381085102 -674060231 1647059405 1169202375 1233214341 -1964078912 2045851423 -1257818534 -292713908 752205721 -301693591 807505481 -565166563 128862533 -1599208845 -515351272 861024449 -956366495 -1071365224 524464309 1860272365 -759469693 697882809 -660084878 1748578135 1300765130 1966574027 -287770729 627653123 342765707 -2049163833 -303764553 1459431414 -1307699390 584494469 1227125046 973759682 -1166505154 -2007386335 -2044008652 346139172 -17900355 1458779953 2037116910 -2102038504 617608369 -325313442 1822343267 -510373821 -1402248216 1543164227 572940970 -1467900431 -7396180 745831982 914118149 -1681227102 1665586771 1886232006 809805417 1393343322 541574056 -612177561 -1209802521 -1008488097 1328959033 -1090454015 1356347034 1154388253 631723310 1327468403 952526958 283204699 734365228 1807246090 -1467280212 1242207362 39479842 1744916118 -921206549 -1049079244 1229148122 -577985409 -1809469912 420683378 799914826 1239076081 285235048 141622022 543524455 1374482870 1282319975 -1500926442 1058312248 1467409849 1210801598 1939182203"

"GLOBALS"
"min-pxcor","max-pxcor","min-pycor","max-pycor","perspective","subject","nextIndex","directed-links","ticks","crops_flammabillity","crop_growth_duration","crop_rot_duration","farmland_flammabillity","fire_duration","fire_spread","forest_mature_duration","forest_regrowth_duration","natural_fire_chance","old_forest_flammabillity","young_forest_flammabillity"
"0","{0}","0","{1}","0","nobody","0",\"""NEITHER\""","0","0.6","300","112","0.35","5","12.4","500","250","0.001","0.15","0.35"

"TURTLES"
"who","color","heading","xcor","ycor","shape","label","label-color","breed","hidden?","size","pen-size","pen-mode"

"PATCHES"
"pxcor","pycor","pcolor","plabel","plabel-color","ptype","maturity" """.format(width-1,height-1)
    )
        for pxcor in range(0, w):
            for pycor in range(0, h):
                pcolor = patches[new_labels[pxcor][pycor]][3]
                plabel = patch_name[new_labels[pxcor][pycor]]
                maturity = 0 if plabel in ["city", "river"] else random.random()
                print("\"%d\",\"%d\",\"%d\",\"\"\"\"\"\",\"9.9\",\"\"\"%s\"\"\",\"%f\""% (pxcor, pycor, pcolor, plabel, maturity))
        
        print("""
    "LINKS"
    "end1","end2","color","label","label-color","hidden?","breed","thickness","shape","tie-mode"


    "PLOTS"
    ""
    "EXTENSIONS"
        """)
        sys.stdout = original_stdout # Reset the standard output to its original value

    print("World sucessfully generated to file", filename)


if __name__ == "__main__":
    # set default
    args = ("world_bmp", 100, 100)
    if(len(sys.argv)==4):
        args = (sys.argv[1], int(sys.argv[2]), int(sys.argv[3]))
    main(*args)
